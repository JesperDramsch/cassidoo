from typing import List
from collections import Counter


def wordle_guess(guess: str, solution: str) -> str:
    """Given a guess and a solution, return the wordle representation of the guess.

    Using the rules of Wordle, given a guess word and a solution word, 
    return a set of emojis returned from the guessWord.

    If the letter matches exactly in the position: ðŸŸ©
    If the letter is in the word but not in the correct position: ðŸŸ¨
    If the letter is not in the word: â¬›

    Parameters
    ----------
    guess : str
        String with the guess
    solution : str
        String with the solution

    Returns
    -------
    str
        [description]

    Example
    -------

    >>> wordle_guess('reads', 'fudge')
    'â¬›ðŸŸ¨â¬›ðŸŸ¨â¬›'

    >>> wordle_guess('lodge', 'fudge')
    'â¬›â¬›ðŸŸ©ðŸŸ©ðŸŸ©'

    >>> wordle_guess('deeds', 'fudge')
    'ðŸŸ¨ðŸŸ¨â¬›â¬›â¬›'

    >>> wordle_guess('error', 'tries')
    'ðŸŸ¨ðŸŸ©â¬›â¬›â¬›'

    >>> wordle_guess('cooks', 'blond')
    'â¬›â¬›ðŸŸ©â¬›â¬›'
    """
    matches: List[str] = ["â¬›"] * len(guess)

    occurrences = Counter(solution)

    # ðŸŸ© ðŸŸ¨ â¬›

    for i in len(guess):
        if guess[i] == solution[i]:
            matches[i] = "ðŸŸ©"
            occurrences[guess[i]] -= 1

    for i, letter in enumerate(guess):
        if occurrences[letter] > 0:
            matches[i] = "ðŸŸ¨"
            occurrences[letter] -= 1

    return "".join(matches)


if __name__ == "__main__":
    import doctest

    doctest.testmod()
